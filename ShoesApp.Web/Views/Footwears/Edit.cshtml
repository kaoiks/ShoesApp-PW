@using INF148151_148140.ShoesApp.Core;
@model INF148151_148140.ShoesApp.Intefaces.IFootwear

@{
	ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Producer</h4>
<hr />
<div class="row">
	<div class="row justify-content-center">
		<div class="col-md-4">
			<form asp-action="Edit">
				<div asp-validation-summary="ModelOnly" class="text-danger"></div>
				<input type="hidden" asp-for="Id" />
				<div class="form-group">
					<label asp-for="Sku" class="control-label"></label>
					<input asp-for="Sku" class="form-control" />
					<span asp-validation-for="Sku" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Name" class="control-label"></label>
					<input asp-for="Name" class="form-control" />
					<span asp-validation-for="Name" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Color" class="control-label"></label>
					<input asp-for="Color" class="form-control" />
					<span asp-validation-for="Color" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Price" class="control-label"></label>
					<input asp-for="Price" type="number" step="0.01" class="form-control" />
					<span asp-validation-for="Price" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Producer" class="control-label"></label>
					<select asp-for="Producer" class="form-control">
						@foreach (var item in ViewBag.Producers)
						{

							<option type="radio" asp-for="Producer" selected="@(Model.Producer != null && Model.Producer.Id == item.Id)" value="@item.Id"> @item.Name </option>
						}
					</select>
					<span asp-validation-for="Producer" class="text-danger"></span>
				</div>
				<div class="form-group">
					<label asp-for="Type" class="control-label"></label>
					<select asp-for="Type" class="form-control">
						@foreach (var item in Enum.GetValues(typeof(FootwearType)))
						{
							<option type="radio" asp-for="Type" value="@item"> @item </option>
						}
					</select>
					<span asp-validation-for="Type" class="text-danger"></span>
				</div>
				<div class="form-group">
					<input type="submit" style="margin-top: 10px " value="Save" class="btn btn-primary" />
					<a class="btn btn-info" style="margin-top: 10px" asp-action="Index">Back to List</a>
				</div>
			</form>
		</div>
	</div>
</div>


@section Scripts {
	@* <script>
        // Attach an event listener to the input field
        document.querySelector('input[name="Price"]').addEventListener('input', function (e) {
            // Get the input value
            let inputValue = e.target.value;

            // Remove any non-digit characters (except the comma)
            inputValue = inputValue.replace(/[^\d,]/g, '');

            // Ensure only one comma is present as the decimal separator
            let commaCount = inputValue.split(',').length - 1;
            if (commaCount > 1) {
                inputValue = inputValue.substring(0, inputValue.lastIndexOf(','));
            }

            // Format the value to have exactly two decimal places
            let parts = inputValue.split(',');
            if (parts.length > 1) {
                parts[1] = parts[1].substring(0, 2);
                inputValue = parts.join(',');
            }

            // Update the input field value
            e.target.value = inputValue;
        });
    </script> *@
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}
